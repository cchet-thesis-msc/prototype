swarm:
  deployment: ${project.build.finalName}.war
  http:
    port: 8080
  contex:
    path: "/"
  ee:
    jboss-descriptor-property-replacement: true
  logging:
    pattern-formatters:
      DEFAULT_LOG_PATTERN:
        pattern: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p (%t) [%C{2}] trace.id=%X{trace.id} | trace.group=%X{trace.group} - %m%n"
    console-handlers:
      CONSOLE:
        named-formatter: DEFAULT_LOG_PATTERN
---
HBM_DIALECT: org.hibernate.dialect.H2Dialect
HBM_DRIVER: org.h2.Driver
HBM_USER: ${db.user}
HBM_PASSWORD: ${db.password}
HBM_SCHEMA: ${db.schema}
# Necessary because config set via 'swarm.jaeger.*', breaks jaeger integration
#JAEGER_SERVICE_NAME: ${${project.build.finalName}}
#JAEGER_AGENT_HOST: localhost
#JAEGER_AGENT_PORT: 6831
#JAEGER_REPORTER_LOG_SPANS: true
#JAEGER_REPORTER_FLUSH_INTERVAL: 100
#JAEGER_SAMPLER_TYPE: const
#JAEGER_SAMPLER_PARAM: 1

project:
  stage: dev
swarm:
  logging:
    root-logger:
      level: DEBUG
      handlers:
        - CONSOLE
    loggers:
      org.keycloak:
        level: TRACE
        handlers:
          - CONSOLE
      com.google:
        level: TRACE
        handlers:
          - CONSOLE
  microprofile:
    config:
      config-sources:
        db.secrets:
          properties:
            keycloak.token-url: http://localhost:9080/auth/realms/master/protocol/openid-connect/token
            keycloak.client.id: integration-service-db
            keycloak.client.secret: db1e9a9c-8e46-406d-8ece-800d1b4577ef

  datasources:
    data-sources:
      DS:
        driver-name: h2
        connection-url: jdbc:h2:~/DEMO;INIT=CREATE SCHEMA IF NOT EXISTS DEMO
        jndi-name: java:/DS
        user-name: ${db.password}
        password: ${db.user}
---
HBM_DIALECT: org.hibernate.dialect.H2Dialect
HBM_DRIVER: org.h2.Driver
HBM_USER: ${db.user}
HBM_PASSWORD: ${db.password}
HBM_SCHEMA: ${db.schema}

project:
  stage: test
swarm:
  logging: INFO
  microprofile:
    config:
      config-sources:
        db.secrets:
          properties:
            keycloak.token-url: http://localhost:9080/auth/realms/master/protocol/openid-connect/token
            keycloak.client.id: integration-service-db
            keycloak.client.secret: db1e9a9c-8e46-406d-8ece-800d1b4577ef
  datasources:
    data-sources:
      DS:
        driver-name: h2
        connection-url: jdbc:h2:~/DEMO;INIT=CREATE SCHEMA IF NOT EXISTS DEMO
        jndi-name: java:/DS
        user-name: ${db.password}
        password: ${db.user}
---
HBM_DIALECT: org.hibernate.dialect.H2Dialect
HBM_DRIVER: org.h2.Driver
HBM_USER: ${db.user}
HBM_PASSWORD: ${db.password}
HBM_SCHEMA: ${db.schema}

# Necessary because config set via 'swarm.jaeger.*', breaks jaeger integration
#JAEGER_SERVICE_NAME: ${project.build.finalName}
#JAEGER_AGENT_HOST: jaeger-agent
#JAEGER_AGENT_PORT: 6831
#JAEGER_REPORTER_LOG_SPANS: true
#JAEGER_REPORTER_FLUSH_INTERVAL: 100
#JAEGER_SAMPLER_TYPE: const
#JAEGER_SAMPLER_PARAM: 1

project:
  stage: openshift
swarm:
  logging:
    file-handlers:
#    custom-handlers:
#      SYSLOGGER:
#        named-formatter: DEFAULT_LOG_PATTERN
#        attribute-class: org.jboss.logmanager.handlers.SyslogHandler
#        module: org.jboss.logmanager
#        properties:
#          serverHostname: graylog
#          hostname: ${project.build.finalName}
#          port: 10514
#          protocol: UDP
    root-logger:
      level: WARN
      handlers:
        - CONSOLE
        #- SYSLOGGER
    loggers:
      at.liwest:
        level: INFO
        handlers:
          - CONSOLE
          #- SYSLOGGER
  microprofile:
    config:
      config-sources:
        db.secrets:
          dir: ${oc.secret-integration-service-app.dir}
  datasources:
    data-sources:
      DS:
        driver-name: h2
        connection-url: jdbc:h2:~/DEMO;INIT=CREATE SCHEMA IF NOT EXISTS DEMO
        jndi-name: java:/DS
        user-name: ${db.password}
        password: ${db.user}