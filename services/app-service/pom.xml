<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.gepardec.esb.prototype.services</groupId>
    <artifactId>app-service</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>app-service</name>

    <properties>
        <!-- Build Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <downloadSources>true</downloadSources>
        <maven.min.version>3.0</maven.min.version>
        <jdk.min.version>${maven.compiler.source}</jdk.min.version>

        <!-- Dependency versions -->
        <!-- Wildfly-Swarm Dependency versions 'wildfly-swarm:build-parent' -->
        <org.wildfly.wildfly-swarm.version>2018.5.0</org.wildfly.wildfly-swarm.version>
        <slf4j.jbopss-logging.version>1.1.0.Final</slf4j.jbopss-logging.version>
        <io-opentracing.opentracing-api.version>0.31.0</io-opentracing.opentracing-api.version>
        <io-opentracing-contrib.opentracing-cdi.version>0.1.0</io-opentracing-contrib.opentracing-cdi.version>
        <io-opentracing.opentracing-jaxrs2.version>0.1.4</io-opentracing.opentracing-jaxrs2.version>
        <org.wildfly.config-api.version>1.3.1</org.wildfly.config-api.version> <!-- Fix for https://issues.jboss.org/browse/SWARM-2015 -->

        <!-- Other Dependency versions -->
        <net.sf.dozer-dozer.version>5.5.1</net.sf.dozer-dozer.version>
        <deltaspike.deltaspike-distribution.version>1.8.2</deltaspike.deltaspike-distribution.version>
        <google.google-oauth-client>1.23.0</google.google-oauth-client>
        <lombok.lombok.version>1.18.0</lombok.lombok.version>

        <!-- Dependencies Internal -->
        <liwest-esb.exception.version>1.0-SNAPSHOT</liwest-esb.exception.version>

        <!-- Dependencies Tests -->
        <junit.junit.version>4.12</junit.junit.version>
        <org-jboss.resteasy-client.version>3.0.24.Final</org-jboss.resteasy-client.version>
        <fasterxml.jackson.version>2.8.9</fasterxml.jackson.version>
        <org.arquillian.arquillian-bom.version>1.1.15.Final</org.arquillian.arquillian-bom.version>
        <schrinkwrap.shrinkwrap-resolver-bom.version>2.2.6</schrinkwrap.shrinkwrap-resolver-bom.version>

        <!-- Plugin versions -->
        <fabric8.maven.plugin.version>3.5.38</fabric8.maven.plugin.version> <!-- For OC-3.5=3.5.32, OC-3.6=3.5.38 -->
        <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
        <maven-resource-plugin.version>3.0.2</maven-resource-plugin.version>
        <maven-war-plugin.version>3.2.0</maven-war-plugin.version>
        <swagger-maven-plugin.version>2.3.1</swagger-maven-plugin.version>
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
        <swagger-maven-plugin.version>2.3.1</swagger-maven-plugin.version>

        <!-- Openshift constants -->
        <oc.secret-service-app>secret-app-service</oc.secret-service-app>
        <oc.secret-service-app.dir>/config/secret</oc.secret-service-app.dir>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Swarm -->
            <dependency>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>bom-all</artifactId>
                <version>${org.wildfly.wildfly-swarm.version}</version>
                <type>pom</type>
                <scope>import</scope>
                <exclusions> <!-- Fix for https://issues.jboss.org/browse/SWARM-2015 -->
                    <exclusion>
                        <groupId>org.wildfly.swarm</groupId>
                        <artifactId>config-api-runtime</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${schrinkwrap.shrinkwrap-resolver-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${org.arquillian.arquillian-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.deltaspike.distribution</groupId>
                <artifactId>distributions-bom</artifactId>
                <version>${deltaspike.deltaspike-distribution.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency> <!-- Fix for https://issues.jboss.org/browse/SWARM-2015 -->
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>config-api-runtime</artifactId>
            <version>${org.wildfly.config-api.version}</version>
        </dependency>

        <!-- Dependencies wildfly-swarm fractions -->
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jaxrs</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>swagger</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>opentracing</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jaeger</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>logging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>microprofile-config</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-microprofile-config-implementation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>microprofile-health</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>microprofile-metrics</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>microprofile-fault-tolerance</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>bean-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>jaxrs-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>keycloak</artifactId>
        </dependency>

        <!-- Dependencies Deltaspike -->
        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.core</groupId>
            <artifactId>deltaspike-core-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-partial-bean-module-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-partial-bean-module-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-proxy-module-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.deltaspike.modules</groupId>
            <artifactId>deltaspike-proxy-module-impl-asm</artifactId>
        </dependency>

        <!-- Dependencies commons -->
        <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client</artifactId>
            <version>${google.google-oauth-client}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.google.http-client</groupId>
            <artifactId>google-http-client-jackson</artifactId>
            <version>${google.google-oauth-client}</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>${org-jboss.resteasy-client.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.slf4j</groupId>
            <artifactId>slf4j-jboss-logging</artifactId>
            <version>${slf4j.jbopss-logging.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>${net.sf.dozer-dozer.version}</version>
        </dependency>

        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-api</artifactId>
            <version>${io-opentracing.opentracing-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-util</artifactId>
            <version>${io-opentracing.opentracing-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-cdi</artifactId>
            <version>${io-opentracing-contrib.opentracing-cdi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>${org-jboss.resteasy-client.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <version>${org-jboss.resteasy-client.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${fasterxml.jackson.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>arquillian</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-java-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <message>To build this project JDK ${jdk.min.version} (or
                                        greater) is required. Please install it.
                                    </message>
                                    <version>${jdk.min.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-maven-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <message>To build this project Maven ${maven.min.version} (or
                                        greater) is required. Please install it.
                                    </message>
                                    <version>${maven.min.version}</version>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <swarm.project.stage>test</swarm.project.stage>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resource-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>${swagger-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <!-- Configuration for generating the swagger client for the integration ddatabase service -->
                        <id>generate-swagger-integration-database</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/swagger/api/integration-service-db.json</inputSpec>
                            <output>${project.build.directory}/generated-sources/swagger/integration-database</output>
                            <language>jaxrs-cxf</language>
                            <apiPackage>${project.groupId}.app.rest.client.api.integration.database</apiPackage>
                            <modelPackage>${project.groupId}.app.rest.client.model.integration.database</modelPackage>
                            <addCompileSourceRoot>false</addCompileSourceRoot>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <modelNamePrefix>Db</modelNamePrefix>
                            <templateDirectory>${project.basedir}/swagger/templates</templateDirectory>
                            <configOptions>
                                <sourceFolder>/src</sourceFolder>
                                <dateLibrary>java8</dateLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <executions>
                    <execution>
                        <!-- We delete all other source, because only our template-based JAX-RS interface and models are needed -->
                        <id>clean-swagger-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <directory>${project.build.directory}/generated-sources/swagger/integration-database/src/main/java</directory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <!-- Add swagger integration-database client sources -->
                                <source>${project.build.directory}/generated-sources/swagger/integration-database/src</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- Swarm -->
            <plugin>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>wildfly-swarm-plugin</artifactId>
                <version>${org.wildfly.wildfly-swarm.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--<debugPort>5005</debugPort>-->
                    <bundleDependencies>true</bundleDependencies>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- This profile is for remote deployment of the service -->
        <profile>
            <id>fabric8</id>
            <build>
                <plugins>
                    <!-- https://maven.fabric8.io/ -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <version>${fabric8.maven.plugin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <enricher>
                                <excludes>
                                    <exclude>f8-expose</exclude>
                                </excludes>
                            </enricher>
                            <generator>
                                <config>
                                    <wildfly-swarm>
                                    </wildfly-swarm>
                                </config>
                            </generator>
                            <apiVersion>1</apiVersion>
                            <createExternalUrls>true</createExternalUrls>
                            <podName>${project.artifactId}</podName>
                            <mode>openshift</mode>
                            <buildStrategy>s2i</buildStrategy>
                            <buildRecreate>all</buildRecreate>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
