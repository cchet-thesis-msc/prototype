swarm:
  deployment:
    ${project.build.finalName}.war:
      swagger:
        root: "/rest-api"
        title: "${project.build.finalName}"
        version: "1"
        packages:
          - "com.gepardec.esb.prototype.services.app.configuration"
          - "com.gepardec.esb.prototype.services.app.rest"
  http:
    port: 8080
  contex:
    path: "/"
  logging:
    pattern-formatters:
      DEFAULT_LOG_PATTERN:
        pattern: "%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p (%t) [%C{2}] trace.id=%X{trace.id} | trace.group=%X{trace.group} - %m%n"
    console-handlers:
      CONSOLE:
        named-formatter: DEFAULT_LOG_PATTERN
---
project:
  stage: dev
swarm:
  http:
    port: 8081
  management:
    http:
      port: 9991
  logging:
    root-logger:
      level: INFO
      handlers:
        - CONSOLE
    loggers:
      org.keycloak:
        level: INFO
        handlers:
          - CONSOLE
      com.google:
        level: INFO
        handlers:
          - CONSOLE
  microprofile:
    config:
      config-sources:
        app.secrets:
          properties:
            service.db.base-url: http://localhost:8082/rest-api
---
project:
  stage: test
swarm:
  logging: INFO
  microprofile:
    config:
      config-sources:
        APP:
          properties:
            service.db.base-url: http://localhost:8082
---
# Fraction does not support this parameter
JAEGER_ENDPOINT: "${env.JAEGER_HOST}"
GRAYLOG_HOST: "${env.GRAYLOG_HOST}"

project:
  stage: openshift
swarm:
  jaeger:
    service-name: "${project.build.finalName}"
    reporter-log-spans: true
    reporter-flush-interval: 100
    sampler-type: const
    sampler-parameter: 1
  logging:
    file-handlers:
    custom-handlers:
      GELF-HTTP:
        named-formatter: DEFAULT_LOG_PATTERN
        attribute-class: biz.paluch.logging.gelf.wildfly.WildFlyGelfLogHandler
        module: biz.paluch.logging
        properties:
          host: ${GRAYLOG_HOST}
          extractStackTrace: true
          includeFullMdc: true
          maximumMessageSize: 1048576
    root-logger:
      level: WARN
      handlers:
        - CONSOLE
        - GELF-HTTP
    loggers:
      com.gepardec:
        level: INFO
        handlers:
          - CONSOLE
          - GELF-HTTP
  keycloak:
    json:
      path: ${oc.secret-service-app-keycloak.dir}/keycloak.json
  deployment:
    ${project.build.finalName}.war:
      web:
        login-config:
          auth-method: KEYCLOAK
        security-constraints:
          - url-pattern: /rest-api/report/*
            roles: [client]
  microprofile:
    config:
      config-sources:
        app.secrets:
          dir: ${oc.secret-service-app.dir}
